{"version":3,"file":"static/js/710.c254243c.chunk.js","mappings":"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","sources":["components/ui/LoadingButton/LoadingButton.styled.jsx","components/ui/LoadingButton/LoadingButton.jsx","components/ui/Section/Section.styled.js","components/ui/Section/Section.jsx","redux/contacts/contactsSelectors.js","components/ContactsFilter/ContactsFilter.styled.jsx","components/ContactsFilter/ContactsFilter.jsx","components/ContactsForm/ContactsForm.jsx","components/ui/Loader/Loader.jsx","components/ContactsList/ContactsItem/ContactsItem.styled.jsx","components/ContactsList/ContactsItem/ContactsItem.jsx","components/ui/SkeletonList/SkeletonList.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactsAppBar/ContactsAppBar.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx","utils/schemes.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: auto;\n  padding: 10px;\n\n  margin-top: 5px;\n  margin-bottom: 20px;\n\n  background-color: #f5f4fa;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\n\n  font-family: inherit;\n  font-size: 17px;\n  font-weight: 500;\n\n  text-align: center;\n  border-radius: 4px;\n  border: none;\n\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  :hover {\n    background-color: rgba(77, 77, 77, 0.1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\nimport { Button } from './LoadingButton.styled';\n\nexport const LoadingButton = ({\n  error = null,\n  isLoading = false,\n  text = 'Text',\n}) => {\n  return (\n    <Button type=\"submit\" disabled={error || isLoading}>\n      {isLoading ? (\n        <>\n          {text}\n          <ClipLoader\n            size={20}\n            css={`\n              margin-left: 10px;\n              border-color: #1976d2;\n            `}\n          />\n        </>\n      ) : (\n        text\n      )}\n    </Button>\n  );\n};\n\nLoadingButton.propTypes = {\n  error: PropTypes.string,\n  isLoading: PropTypes.bool,\n  text: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  /* width: 1200px; */\n  /* margin: 0 auto; */\n  text-align: center;\n  padding: 20px 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './Section.styled';\n\nexport const Section = ({ children }) => <Container>{children}</Container>;\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n","export const getContactsValue = state => state.contacts.entities;\nexport const getFilterValue = state => state.contacts.filter;\nexport const getIsLoadingValue = state => state.contacts.isLoading;\nexport const getErrorValue = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  font-size: 17px;\n  margin-bottom: 15px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/contactsAsyncSlice';\nimport { getFilterValue } from '../../redux/contacts/contactsSelectors';\nimport { Title } from './ContactsFilter.styled';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { InputAdornment, TextField } from '@mui/material';\n\nexport const ContactsFilter = () => {\n  const filterValue = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  const handleSearchContact = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <Title>Find contacts by name</Title>\n      <TextField\n        sx={{ width: '100%' }}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search...\"\n        value={filterValue}\n        onChange={handleSearchContact}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n","import { Controller, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { IMaskInput } from 'react-imask';\nimport { toast } from 'react-toastify';\nimport {\n  TextField,\n  Box,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  FormHelperText,\n} from '@mui/material';\nimport schema from '../../utils/schemes';\nimport { LoadingButton } from '../ui/LoadingButton';\nimport { forwardRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport {\n  getContactsValue,\n  getErrorValue,\n} from '../../redux/contacts/contactsSelectors';\n\nexport const ContactsForm = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const contacts = useSelector(getContactsValue);\n  const error = useSelector(getErrorValue);\n  const dispatch = useDispatch();\n\n  const {\n    control,\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema.addContact),\n  });\n\n  const checkDuplicateName = nameToAdd => {\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === nameToAdd.toLowerCase()\n    );\n  };\n\n  const onSubmit = ({ name, phone }) => {\n    if (checkDuplicateName(name)) {\n      return toast.warn(\n        'You are trying to enter a name that is already on the phonebook'\n      );\n    }\n\n    if (!phone) {\n      return toast.warn('Please enter the phone number of your contact');\n    }\n\n    createContact(name, phone);\n    reset();\n  };\n\n  const createContact = async (name, number) => {\n    const contact = {\n      name,\n      number,\n    };\n\n    try {\n      setIsLoading(true);\n      await dispatch(addContact(contact)).unwrap();\n    } catch (error) {\n      toast('Something went wrong. Please reload the page');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const TextMaskCustom = forwardRef(function TextMaskCustom(props, ref) {\n    const { onChange, ...other } = props;\n    return (\n      <IMaskInput\n        {...other}\n        mask=\"(#00) 00 00 000\"\n        definitions={{\n          '#': /[0-9]/,\n        }}\n        inputRef={ref}\n        onAccept={value => onChange({ target: { name: props.name, value } })}\n        overwrite\n      />\n    );\n  });\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit(onSubmit)}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& .MuiFormControl-root': { m: 1, width: '100%' },\n      }}\n    >\n      <TextField\n        type=\"text\"\n        label=\"Name\"\n        error={!!errors.name}\n        helperText={errors.name?.message}\n        placeholder=\"Enter the name of your contact\"\n        {...register('name')}\n      />\n      <Controller\n        name=\"phone\"\n        control={control}\n        render={({ field }) => (\n          <FormControl error={!!errors.phone}>\n            <InputLabel htmlFor=\"phone-input\">Phone</InputLabel>\n            <OutlinedInput\n              id=\"phone-input\"\n              name=\"phone\"\n              label=\"phone\"\n              placeholder=\"(063) 00 00 000\"\n              inputComponent={TextMaskCustom}\n              {...field}\n            />\n            <FormHelperText id=\"phone-input\">\n              {errors.phone?.message}\n            </FormHelperText>\n          </FormControl>\n        )}\n      />\n      <LoadingButton\n        text=\"Add contact\"\n        error={error}\n        isLoading={isLoading}\n      ></LoadingButton>\n    </Box>\n  );\n};\n","import ClipLoader from 'react-spinners/ClipLoader';\nimport PropTypes from 'prop-types';\n\nexport const Loader = ({ size = 70 }) => {\n  return (\n    <ClipLoader\n      size={size}\n      css={`\n        display: block;\n        margin: 0 auto;\n        border-color: #0099ff;\n      `}\n    />\n  );\n};\n\nLoader.propTypes = {\n  size: PropTypes.number,\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: 17px;\n  margin-bottom: 15px;\n  padding: 18px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  /* max-width: 300px; */\n  width: 275px;\n  /* text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden; */\n\n  background-color: #fff;\n  color: rgba(0, 0, 0, 0.87);\n  -webkit-transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  border-radius: 4px;\n  box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n    0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n\n  :last-child {\n    margin-bottom: 0;\n  }\n\n  @media (min-width: 768px) {\n    margin: 0;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 17px;\n  margin-bottom: 10px;\n  text-align: left;\n  /* text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden; */\n`;\n\nexport const Phone = styled.a`\n  font-size: 17px;\n  color: black;\n  display: block;\n  text-align: left;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  /* display: flex; */\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  margin-left: 10px;\n  /* padding: 10px; */\n\n  background-color: #f5f4fa;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\n\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 500;\n\n  text-align: center;\n  border-radius: 50%;\n  border: none;\n\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  :hover {\n    background-color: rgba(77, 77, 77, 0.1);\n  }\n`;\n","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { VscClose } from 'react-icons/vsc';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { removeContact } from '../../../redux/contacts/contactsOperations';\nimport { getErrorValue } from '../../../redux/contacts/contactsSelectors';\nimport { Loader } from '../../ui/Loader';\nimport { Button, Item, Name, Phone } from './ContactsItem.styled';\n\nexport const ContactsItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const error = useSelector(getErrorValue);\n  const [loading, setLoading] = useState(false);\n\n  const handleDeleteContact = async currentId => {\n    if (id === currentId) setLoading(true);\n    try {\n      await dispatch(removeContact(currentId)).unwrap();\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  return (\n    <Item>\n      <div>\n        <Name>{name}</Name>\n        <Phone href={`tel:${number}`} type=\"tel\">\n          {number}\n        </Phone>\n      </div>\n      <Button\n        type=\"button\"\n        disabled={loading || error}\n        onClick={() => handleDeleteContact(id)}\n      >\n        {loading ? <Loader size={15} /> : <VscClose size={20} />}\n      </Button>\n    </Item>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import Skeleton from '@mui/material/Skeleton';\nimport Stack from '@mui/material/Stack';\nimport Grid from '@mui/material/Grid';\n\nexport const SkeletonList = () => {\n  return (\n    <Grid container gap={1}>\n      {Array.from(new Array(4)).map((_, index) => (\n        <Stack key={index} width={275}>\n          <Skeleton variant=\"text\" animation=\"wave\" height={35} />\n          <Skeleton variant=\"text\" animation=\"wave\" height={35} />\n        </Stack>\n      ))}\n    </Grid>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  @media (max-width: 768px) {\n    font-size: 17px;\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n  }\n\n  @media (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  /* letter-spacing: 1.5; */\n  /* font-weight: 400; */\n  line-height: 1.5;\n  /* letter-spacing: 0.06em; */\n`;\n","import { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\nimport {\n  getContactsValue,\n  getFilterValue,\n} from '../../redux/contacts/contactsSelectors';\nimport { ContactsItem } from './ContactsItem';\nimport { SkeletonList } from '../ui/SkeletonList/';\nimport { List, Text } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(getContactsValue);\n  const [isLoading, setIsLoading] = useState(false);\n  const filterValue = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, []);\n\n  useEffect(() => {\n    (async function () {\n      try {\n        await dispatch(fetchContacts()).unwrap();\n      } catch (error) {\n        toast('Something went wrong. Please reload the page');\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [dispatch]);\n\n  const filteredContacts = contacts.filter(({ name }) => {\n    return name.toLowerCase().includes(filterValue.toLowerCase());\n  });\n\n  if (isLoading) return <SkeletonList />;\n\n  return (\n    <div>\n      {filteredContacts.length ? (\n        <List>\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactsItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              contacts={contacts}\n            />\n          ))}\n        </List>\n      ) : (\n        <>\n          <Text>\n            Nothing to show...<br></br>You can add your first contact right now\n          </Text>\n        </>\n      )}\n    </div>\n  );\n};\n","import AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Button } from '@mui/material';\nimport { useSelector } from 'react-redux/';\nimport { useDispatch } from 'react-redux/';\nimport { getUserName } from '../../redux/auth/authSelectors';\nimport { logoutUser } from '../../redux/auth/authOperations';\n\nexport const ContactsAppBar = () => {\n  const username = useSelector(getUserName);\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logoutUser());\n  };\n\n  return (\n    <Box>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap component=\"div\" sx={{ flexGrow: 1 }}>\n            Contacts\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n          >\n            {`Welcome, ${username}`}\n          </Typography>\n          <Button color=\"inherit\" onClick={logoutHandler}>\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin: 0px auto;\n\n  font-family: 'Poppins', 'Roboto';\n\n  @media (max-width: 767px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const AddContact = styled.div`\n  width: 310px;\n  height: 100%;\n\n  margin-bottom: 20px;\n  padding: 20px;\n\n  background-color: rgba(151, 151, 151, 0.1);\n  border-radius: 5px;\n  box-shadow: rgba(99, 99, 99, 0.322) 0px 2px 8px 0px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 0;\n    margin-right: 30px;\n  }\n\n  @media (min-width: 1024px) {\n    width: 345px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 50px;\n  }\n`;\n\nexport const ContactsSection = styled.div`\n  height: 100%;\n  width: 310px;\n\n  padding: 20px;\n\n  background-color: rgba(151, 151, 151, 0.1);\n  border-radius: 5px;\n  box-shadow: rgba(99, 99, 99, 0.322) 0px 2px 8px 0px;\n\n  @media (min-width: 768px) {\n    width: 320px;\n  }\n  @media (min-width: 1024px) {\n    width: 600px;\n  }\n`;\n\nexport const TitlePhonebook = styled.h1`\n  margin-bottom: 15px;\n  font-size: 30px;\n`;\n\nexport const TitleContacts = styled.h1`\n  margin-bottom: 23px;\n  font-size: 30px;\n`;\n","import { Section } from '../../components/ui/Section';\nimport { ContactsFilter } from '../../components/ContactsFilter';\nimport { ContactsForm } from '../../components/ContactsForm';\nimport { ContactsList } from '../../components/ContactsList';\nimport { ContactsAppBar } from '../../components/ContactsAppBar';\nimport {\n  Wrapper,\n  AddContact,\n  TitlePhonebook,\n  TitleContacts,\n  ContactsSection,\n} from './ContactsPage.styled';\n\nexport const ContactsPage = () => {\n  return (\n    <>\n      <ContactsAppBar />\n      <Section>\n        <Wrapper>\n          <AddContact>\n            <TitlePhonebook>Phonebook</TitlePhonebook>\n            <ContactsForm />\n            <ContactsFilter />\n          </AddContact>\n          <ContactsSection>\n            <TitleContacts>List</TitleContacts>\n            <ContactsList />\n          </ContactsSection>\n        </Wrapper>\n      </Section>\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nconst passwordRegex = /^((?=\\S*?[A-Z])(?=\\S*?[a-z])(?=\\S*?[0-9]).{7,})\\S$/;\n\nconst login = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Please enter your email'),\n  password: yup\n    .string()\n    .min(7, 'The password must not be less than 7 characters')\n    .max(32, 'The password must not be greater than 32 characters')\n    .required('Please enter your password'),\n});\n\nconst signup = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'The name must not be less than two characters')\n    .max(32, 'The name must not be greater than 32 characters')\n    .required('Please enter your name'),\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Please enter your email'),\n  password: yup\n    .string()\n    .min(7, 'The password must not be less than 7 characters')\n    .max(32, 'The password must not be greater than 32 characters')\n    .matches(\n      passwordRegex,\n      'Password must have at least 1 uppercase letter, 1 lowercase letter, and 1 number with no spaces'\n    )\n    .required('Please enter your password'),\n  passwordConfirm: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords do not match')\n    .required('Please confirm your password'),\n});\n\nconst addContact = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'The name must not be less than 2 characters')\n    .max(22, 'The name must not be greater than 22 characters')\n    .required('Please enter the name of your contact'),\n  phone: yup\n    .string()\n    .length(15, 'Please enter the valid phone number')\n    .required('Please enter the phone number of your contact'),\n});\n\nconst schema = { login, signup, addContact };\n\nexport default schema;\n"],"names":["Button","styled","LoadingButton","error","isLoading","text","type","disabled","ClipLoader","size","css","Container","Section","children","getContactsValue","state","contacts","entities","getFilterValue","filter","getErrorValue","Title","ContactsFilter","filterValue","useSelector","dispatch","useDispatch","TextField","sx","width","name","placeholder","value","onChange","e","updateFilter","currentTarget","InputProps","startAdornment","InputAdornment","position","Search","ContactsForm","useState","setIsLoading","useForm","resolver","yupResolver","schema","control","register","handleSubmit","reset","errors","formState","createContact","number","contact","addContact","unwrap","toast","TextMaskCustom","forwardRef","props","ref","other","mask","definitions","inputRef","onAccept","target","overwrite","Box","component","onSubmit","nameToAdd","phone","find","toLowerCase","display","flexDirection","alignItems","m","label","helperText","message","render","field","FormControl","InputLabel","htmlFor","OutlinedInput","id","inputComponent","FormHelperText","Loader","Item","Name","Phone","ContactsItem","loading","setLoading","handleDeleteContact","currentId","removeContact","href","onClick","SkeletonList","Grid","container","gap","Array","from","map","_","index","Stack","Skeleton","variant","animation","height","List","Text","ContactsList","useEffect","fetchContacts","filteredContacts","includes","length","ContactsAppBar","username","getUserName","AppBar","Toolbar","Typography","noWrap","flexGrow","xs","sm","color","logoutUser","Wrapper","AddContact","ContactsSection","TitlePhonebook","TitleContacts","ContactsPage","login","yup","shape","email","required","password","min","max","signup","matches","passwordConfirm","oneOf"],"sourceRoot":""}