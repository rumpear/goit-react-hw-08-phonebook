{"version":3,"file":"static/js/479.cb92b406.chunk.js","mappings":"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","sources":["components/ui/LoadingButton/LoadingButton.styled.jsx","components/ui/LoadingButton/LoadingButton.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx","utils/schemes.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: auto;\n  padding: 10px;\n\n  margin-top: 5px;\n  margin-bottom: 20px;\n\n  background-color: #f5f4fa;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\n\n  font-family: inherit;\n  font-size: 17px;\n  font-weight: 500;\n\n  text-align: center;\n  border-radius: 4px;\n  border: none;\n\n  line-height: 1.87;\n  letter-spacing: 0.06em;\n\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n\n  :hover {\n    background-color: rgba(77, 77, 77, 0.1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ClipLoader } from 'react-spinners';\nimport { Button } from './LoadingButton.styled';\n\nexport const LoadingButton = ({\n  error = null,\n  isLoading = false,\n  text = 'Text',\n}) => {\n  return (\n    <Button type=\"submit\" disabled={error || isLoading}>\n      {isLoading ? (\n        <>\n          {text}\n          <ClipLoader\n            size={20}\n            css={`\n              margin-left: 10px;\n              border-color: #1976d2;\n            `}\n          />\n        </>\n      ) : (\n        text\n      )}\n    </Button>\n  );\n};\n\nLoadingButton.propTypes = {\n  error: PropTypes.string,\n  isLoading: PropTypes.bool,\n  text: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n  font-size: 22px;\n\n  @media (min-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 15px;\n  margin-bottom: 5px;\n\n  @media (min-width: 768px) {\n    font-size: 19px;\n  }\n`;\n\nexport const LoginLink = styled(Link)`\n  font-size: 15px;\n  color: #1976d2;\n\n  transition: color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    color: #1565c0;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 19px;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../../redux/auth/authOperations';\nimport schema from '../../utils/schemes';\nimport { LoginLink, Text, Title } from './RegisterPage.styled';\nimport { Box, TextField } from '@mui/material';\nimport { LoadingButton } from '../../components/ui/LoadingButton';\nimport { useSelector } from 'react-redux';\nimport { getAuthIsLoading } from '../../redux/auth/authSelectors';\n\nexport const RegisterPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getAuthIsLoading);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema.signup),\n  });\n\n  const onSubmit = async data => {\n    const { name, email, password } = data;\n    try {\n      await dispatch(registerUser({ name, email, password })).unwrap();\n    } catch (error) {\n      toast(`Email ${email} has already been taken`);\n    }\n    reset();\n  };\n\n  return (\n    <>\n      <Title>Sign Up</Title>\n      <Text>Itâ€™s quick and easy</Text>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit(onSubmit)}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          '& .MuiTextField-root': { m: 1, width: '100%' },\n        }}\n      >\n        <TextField\n          label=\"Name\"\n          error={!!errors.name}\n          helperText={errors.name?.message}\n          placeholder=\"Please enter your name\"\n          {...register('name')}\n        />\n        <TextField\n          label=\"Email\"\n          error={!!errors.email}\n          helperText={errors.email?.message}\n          placeholder=\"Please enter your email\"\n          {...register('email')}\n        />\n        <TextField\n          // type=\"password\"\n          label=\"Password\"\n          error={!!errors.password}\n          helperText={errors.password?.message}\n          placeholder=\"Please enter your password\"\n          {...register('password')}\n        />\n        <TextField\n          // type=\"password\"\n          label=\"Confirm password\"\n          error={!!errors.passwordConfirm}\n          helperText={errors.passwordConfirm?.message}\n          placeholder=\"Please confirm your password\"\n          {...register('passwordConfirm')}\n        />\n        <LoadingButton text=\"Sign Up\" isLoading={isLoading} />\n      </Box>\n\n      <Text>Already have an account?</Text>\n      <LoginLink to=\"/\">Go to login</LoginLink>\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nconst passwordRegex = /^((?=\\S*?[A-Z])(?=\\S*?[a-z])(?=\\S*?[0-9]).{7,})\\S$/;\n\nconst login = yup.object().shape({\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Please enter your email'),\n  password: yup\n    .string()\n    .min(7, 'The password must not be less than 7 characters')\n    .max(32, 'The password must not be greater than 32 characters')\n    .required('Please enter your password'),\n});\n\nconst signup = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'The name must not be less than two characters')\n    .max(32, 'The name must not be greater than 32 characters')\n    .required('Please enter your name'),\n  email: yup\n    .string()\n    .email('Please enter a valid email')\n    .required('Please enter your email'),\n  password: yup\n    .string()\n    .min(7, 'The password must not be less than 7 characters')\n    .max(32, 'The password must not be greater than 32 characters')\n    .matches(\n      passwordRegex,\n      'Password must have at least 1 uppercase letter, 1 lowercase letter, and 1 number with no spaces'\n    )\n    .required('Please enter your password'),\n  passwordConfirm: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords do not match')\n    .required('Please confirm your password'),\n});\n\nconst addContact = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'The name must not be less than 2 characters')\n    .max(22, 'The name must not be greater than 22 characters')\n    .required('Please enter the name of your contact'),\n  phone: yup\n    .string()\n    .length(15, 'Please enter the valid phone number')\n    .required('Please enter the phone number of your contact'),\n});\n\nconst schema = { login, signup, addContact };\n\nexport default schema;\n"],"names":["Button","styled","LoadingButton","error","isLoading","text","type","disabled","ClipLoader","size","css","Title","Text","LoginLink","Link","RegisterPage","dispatch","useDispatch","useSelector","getAuthIsLoading","useForm","resolver","yupResolver","schema","register","handleSubmit","reset","errors","formState","onSubmit","data","name","email","password","registerUser","unwrap","toast","Box","component","sx","display","flexDirection","alignItems","m","width","TextField","label","helperText","message","placeholder","passwordConfirm","to","login","yup","shape","required","min","max","signup","matches","oneOf","addContact","phone","length"],"sourceRoot":""}